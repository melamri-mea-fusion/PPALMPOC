name: CI + CD

on:
  pull_request:
    branches: [ main ]
    
jobs:
  get-env-vars:
    name: Get Environment vars for each deployment stage
    outputs:
        uat-vars:  ${{ steps.uat-id.outputs.result }}
        prod-vars: ${{ steps.prod-id.outputs.result }}
    runs-on: windows-latest
    steps:
      - name: retrieve env vars for uat
        env:
            CICD_TOKEN: ${{ secrets.CICD_TOKENt }}
        id: uat-id
        shell: pwsh
        run: |
          $headers = @{
                    "Accept" = "application/vnd.github+json"
                    "Authorization" = "Bearer ${{ secrets.CICD_TOKEN }}"
                  }
          $url = "https://api.github.com/repositories/${{ github.repository_id }}/environments/UAT/variables/SHAREPOINT_SOURCE_SITE"
          $response = Invoke-RestMethod -Uri $url -Headers $headers -Method Get
          $SHAREPOINT_SOURCE_SITE = $response.value
          $url = "https://api.github.com/repositories/${{ github.repository_id }}/environments/UAT/variables/SHAREPOINT_TARGET_SITE"
          $response = Invoke-RestMethod -Uri $url -Headers $headers -Method Get
          $SHAREPOINT_TARGET_SITE = $response.value
          $properties = @{
                SHAREPOINT_SOURCE_SITE = $SHAREPOINT_SOURCE_SITE
                SHAREPOINT_TARGET_SITE = $SHAREPOINT_TARGET_SITE
              }
          $result = $properties | ConvertTo-Json
          echo $result 
          echo "{result}={$result }" >> $GITHUB_OUTPUT
      - name: retrieve env vars for PROD
        id: prod-id
        shell: pwsh
        run: |
          $headers = @{
                    "Accept" = "application/vnd.github+json"
                    "Authorization" = "Bearer ${{ secrets.CICD_TOKEN }}"
                  }
          $url = "https://api.github.com/repositories/${{ github.repository_id }}/environments/PROD/variables/SHAREPOINT_SOURCE_SITE"
          $response = Invoke-RestMethod -Uri $url -Headers $headers -Method Get
          $SHAREPOINT_SOURCE_SITE = $response.value
          $url = "https://api.github.com/repositories/${{ github.repository_id }}/environments/PROD/variables/SHAREPOINT_TARGET_SITE"
          $response = Invoke-RestMethod -Uri $url -Headers $headers -Method Get
          $SHAREPOINT_TARGET_SITE = $response.value
          $properties = @{
                SHAREPOINT_SOURCE_SITE = $SHAREPOINT_SOURCE_SITE
                SHAREPOINT_TARGET_SITE = $SHAREPOINT_TARGET_SITE
              }
          $result = $properties | ConvertTo-Json
          echo $result 
          echo "{result}={$result }" >> $GITHUB_OUTPUT
  
  DeployUAT:
    needs: [get-env-vars]
    runs-on: windows-latest
    name: Deploy to UAT 
    steps:
     - name: x
       shell: pwsh
       run: |
         $needs.get-env-vars.outputs | Format-List
   
  DeployProd:
    needs: [DeployUAT]
    name: Deploy to PROD 
    uses: ./.github/workflows/MigrateSPLists.yml
    with:
      ENVIRONMENT: PROD
      SHAREPOINT_SOURCE_SITE: ${{  needs.get-env-vars.outputs.prod-vars.SHAREPOINT_SOURCE_SITE }}
      SHAREPOINT_TARGET_SITE: ${{  needs.get-env-vars.outputs.prod-vars.SHAREPOINT_TARGET_SITE }}
    secrets: 
      MEAFUSION_PFX_PASSWORD: ${{ secrets.MEAFUSION_PFX_PASSWORD }}
      MEAFUSION_PFX : ${{ secrets.MEAFUSION_PFX }}
