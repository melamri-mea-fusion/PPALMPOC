name: release-solution-to-prod-reusable
# Reusable workflow
# convert solution to managed (using a build PowerPlatform environment for the conversion)
# upload the solution to the GitHub artifacts and deploy to the PROD environment
on:
  workflow_call:
    inputs: 
      #Do Not change these values
      #Values are set by the caller
      #caller sample: release-action-call.ymnl
      ENVIRONMENT:
        required: true
        type: string
      solution_name:
        description: 'The solution name.'
        type: string
        default: PPALMPOC       
      solution_shipping_folder:
        description: 'folder name for staging the exported solution *do not change*'        
        type: string
        default: out/ship/
      solution_outbound_folder:
        description: 'staging the unpacked solution folder before check-in *do not change*'
        type: string
        default: out/solutions/
      solution_source_folder: 
       description: 'folder name to be created and checked in *do not change*'
       type: string
       default: solutions/
      solution_release_folder:
       description: 'folder where the released binaries are going to be hosted *do not change*'
       type: string
       default: out/release
      BUILD_ENVIRONMENT_URL:
        description: 'Build environment url.'
        type: string
        required: true       
    secrets:
            CLIENT_SECRET:
              required: true

jobs:
  deploy-solution-to-target-environment:
    runs-on: windows-latest
    # or you can say runs-on: ubuntu-latest
    env:
      RUNNER_DEBUG: 1
    environment: ${{ inputs.ENVIRONMENT }}
    steps:   
    - uses: actions/checkout@v3
      with:
        lfs: true
    - name: Power Platform Action Install
      uses: microsoft/powerplatform-actions/actions-install@v1 
    - name: Pack solution
      uses: microsoft/powerplatform-actions/pack-solution@v1
      with:
        solution-folder: PowerPlatform/${{ inputs.solution_source_folder}}/${{ inputs.solution_name }}
        solution-file: PowerPlatform/${{ inputs.solution_outbound_folder}}/${{ inputs.solution_name }}.zip
        solution-type: Unmanaged
    - name: Import solution as unmanaged to build env
      uses: microsoft/powerplatform-actions/import-solution@v1
      with:
        environment-url: ${{inputs.BUILD_ENVIRONMENT_URL}}
        app-id: ${{vars.CLIENT_ID}}
        client-secret: ${{secrets.CLIENT_SECRET}}
        tenant-id: ${{vars.TENANT_ID}}
        solution-file: PowerPlatform/${{ inputs.solution_outbound_folder}}/${{ inputs.solution_name }}.zip
        force-overwrite: true
        publish-changes: true
    - name: Export solution as managed
      uses: microsoft/powerplatform-actions/export-solution@v1
      with:
        environment-url: ${{inputs.BUILD_ENVIRONMENT_URL}}
        app-id: ${{vars.CLIENT_ID}}
        client-secret: ${{secrets.CLIENT_SECRET}}
        tenant-id: ${{vars.TENANT_ID}}
        solution-name: ${{ inputs.solution_name }}
        managed: true
        solution-output-file: PowerPlatform/${{ inputs.solution_shipping_folder}}/${{ inputs.solution_name }}_managed.zip
    - name: Upload the ready to ship solution to GH artifact store
      uses: actions/upload-artifact@v2
      with:
        name: managedSolutions
        path: PowerPlatform/${{ inputs.solution_shipping_folder}}/
    - uses: actions/checkout@v3
      with:
        lfs: true
    - name: Fetch the ready to ship solution from GH artifact store
      uses: actions/download-artifact@v2
      with:
        name: managedSolutions
        path: PowerPlatform/${{ inputs.solution_release_folder}}
    - name: Import solution to target env
      uses: microsoft/powerplatform-actions/import-solution@v1
      with:
        environment-url: ${{vars.ENVIRONMENT_URL}}
        app-id: ${{vars.CLIENT_ID}}
        client-secret: ${{secrets.CLIENT_SECRET}}
        tenant-id: ${{vars.TENANT_ID}}
        solution-file: PowerPlatform/${{ inputs.solution_release_folder}}/${{ inputs.solution_name }}_managed.zip
        force-overwrite: true
        publish-changes: true
